var s=Object.defineProperty;var r=(e,a,t)=>a in e?s(e,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[a]=t;var i=(e,a,t)=>r(e,typeof a!="symbol"?a+"":a,t);import{C as CalculatorWidget}from"./chunks/CalculatorWidget.D8RxtH3U.js";import{T as Tolerance,C as ChamferSimple,P as Point,a as CtypeChamfer,R as RtypeChamfer,U as Utils}from"./chunks/lib.DVY5Kw34.js";import{d as defineComponent,o as openBlock,c as createElementBlock,E as renderList,F as Fragment,I as createVNode,j as createBaseVNode,a as createTextVNode}from"./chunks/framework.Cp4JlySx.js";const _sfc_main$1=defineComponent({__name:"Calculator",setup(__props){function LQuadrant(e){if(this.options=["第一象限","第四象限","第二象限","第三象限"],this.value=e||this.options[0],this.valid=()=>this.options.includes(this.value),!this.valid())throw new Error(`${this.constructor.name}，当前值：${this.value}，取值范围：${this.options},`)}function LDirection(e){if(this.options=["逆时针","顺时针"],this.value=e||this.options[0],this.valid=()=>this.options.includes(this.value),!this.valid())throw new Error(`${this.constructor.name}，当前值：${this.value}，取值范围：${this.options},`)}function LChamferType(e){if(this.options=["chamfer","radius"],this.value=e||this.options[0],this.valid=()=>this.options.includes(this.value),!this.valid())throw new Error(`${this.constructor.name}，当前值：${this.value}，取值范围：${this.options},`)}function LPosition(e){if(this.options=["外侧","内侧"],this.value=e||this.options[0],this.valid=()=>this.options.includes(this.value),!this.valid())throw new Error(`${this.constructor.name}，当前值：${this.value}，取值范围：${this.options},`)}function LAngle(v=45){this.value=v;const exp="value > -360 && value < 360";if(this.valid=value=>eval(exp),!this.valid(this.value))throw new Error(`${this.constructor.name}，当前值：${this.value}，取值范围：${exp}`)}function LChamfer(v=0){this.value=v;const exp="value > 0 && value < 100";if(this.valid=value=>eval(exp),!this.valid(this.value))throw new Error(`${this.constructor.name}，当前值：${this.value}，取值范围：${exp}`)}function LRadius(v=0){this.value=v;const exp="value > 0 && value < 1000";if(this.valid=value=>eval(exp),!this.valid(this.value))throw new Error(`${this.constructor.name}，当前值：${this.value}，取值范围：${exp}`)}function LTolerance(e="60"){if(this.value=e,this.valid=a=>a.split(" ").filter(t=>t).map(t=>parseFloat(t)).length>=1,!this.valid(this.value))throw new Error(`${this.constructor.name}，当前值：${this.value}，值格式为：62 0.05 -0.05`)}function LToolRadius(v=0){this.value=v;const exp="value >= 0 && value < 100.";if(this.valid=value=>eval(exp),!this.valid(this.value))throw new Error(`${this.constructor.name}，当前值：${this.value}，取值范围：${exp}`)}function LPoint(p=new Point({x:0,z:0})){this.value=p;const exp="value > -1000 && value < 1000";if(this.valid=value=>Object.values(value).every(value=>eval(exp)),!this.valid(this.value))throw new Error(`${this.constructor.name}，当前值：${JSON.stringify(this.value)}，取值范围：${exp}`)}function FtoValue(e){const a={};for(let t in e)a[t]=Utils.isObject(e[t])&&"value"in e[t]?e[t].value:e[t];return a}class Widget{constructor(a){i(this,"name");i(this,"input");i(this,"output");i(this,"instance");const{name:t,input:n,instance:o}=a;this.name=t,this.input=n,this.instance=o,this.output=new o.constructor(FtoValue(n))}}const widgetData=[new Widget({name:"Tolerance",input:{tolerance:new LTolerance},instance:new Tolerance}),new Widget({name:"RightTriangeChamferSimple",input:{value:new LChamfer(1),type:new LChamferType("chamfer"),toolRadius:new LToolRadius(0)},instance:new ChamferSimple}),new Widget({name:"RightTriangeCtypeChamfer",input:{quadrant:new LQuadrant,pointC:new LPoint(new Point({x:100,z:0})),angle:new LAngle(45),value:new LChamfer(1),direction:new LDirection("逆时针"),position:new LPosition("外侧"),toolRadius:new LToolRadius(0)},instance:new CtypeChamfer}),new Widget({name:"RightTriangeRtypeChamfer",input:{quadrant:new LQuadrant,pointC:new LPoint(new Point({x:100,z:0})),value:new LRadius(1),direction:new LDirection("逆时针"),position:new LPosition("外侧"),toolRadius:new LToolRadius(0)},instance:new RtypeChamfer})];return console.log(widgetData[0]),(e,a)=>(openBlock(),createElementBlock(Fragment,null,renderList(widgetData,t=>createVNode(CalculatorWidget,{data:t},null,8,["data"])),64))}}),_hoisted_1=createBaseVNode("h1",{id:"calculator",tabindex:"-1"},[createTextVNode("Calculator "),createBaseVNode("a",{class:"header-anchor",href:"#calculator","aria-label":'Permalink to "Calculator"'},"​")],-1),_hoisted_2=createBaseVNode("p",null,"This is a calculator component.",-1),__pageData=JSON.parse('{"title":"Calculator","description":"","frontmatter":{},"headers":[],"relativePath":"pages/lathe/Calculator.md","filePath":"pages/lathe/Calculator.md"}'),__default__={name:"pages/lathe/Calculator.md"},_sfc_main=Object.assign(__default__,{setup(e){return(a,t)=>(openBlock(),createElementBlock("div",{"data-pagefind-body":!0},[_hoisted_1,_hoisted_2,createVNode(_sfc_main$1)]))}});export{__pageData,_sfc_main as default};
